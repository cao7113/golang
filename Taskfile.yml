# https://taskfile.dev
version: '2'

env:
  GOMODNAME: "github.com/cao7113/golang"
  TEST_DB_URL: mysql://root:@tcp/golang_test?parseTime=true
vars:
  greeting: Hello, Golang!
  test_db_name: golang_test
  mig_path: datasource/migrate

tasks:
  hello:
    cmds:
      - echo "{{.greeting}}"
    silent: true

  test:
    desc: run go test
    cmds:
      - go test ./... -v

  ## Golangci-lint
  lint:
    desc: run golangci-lint
    cmds:
      - golangci-lint run ./...
  lint-try:
    desc: run golangci-lint in trytest
    cmds:
      - golangci-lint run trytest
  linters:
    desc: golangci-lint
    cmds:
      # https://raw.githubusercontent.com/golangci/golangci-lint/v1.20.1/.golangci.example.yml
      - golangci-lint linters -v

  run:
    cmds:
      - go run main.go

  mod:
    cmds:
      # - go mod init $GOMODNAME
      - go mod tidy -v
    
  ## docker
  dkcom-up:
    cmds:
      - docker-compose up

  ## DB
  db:
    desc: enter db session
    cmds:
      - mysql -uroot {{.test_db_name}}
  db-create:
    cmds:
      - mysql -uroot -e "create database if not exists \`{{.test_db_name}}\`;"
  db-drop:
    cmds:
      - mysql -uroot -e "drop database if exists \`{{.test_db_name}}\`;"
  # migrate create -ext sql -dir {{.mig_path}} create_users_table
  db-up:
    desc: migrate up
    cmds:
      - migrate -database $TEST_DB_URL -path {{.mig_path}} up
  db-down:
    desc: migrate down
    cmds:
      - migrate -database $TEST_DB_URL -path {{.mig_path}} down
  db-reset:
    cmds:
      # call tasks serially other than concurrently
      - task: db-drop
      - task: db-create
      - task: db-up
  db-dbs:
    desc: show databases
    cmds:
      - mysql -uroot -e "show databases"
  db-tables:
    desc: show tables
    cmds:
      - mysql -uroot {{.test_db_name}} -e "show full tables"
  install-db-mig:
    desc: install migrations by https://github.com/golang-migrate/migrate/tree/master/cmd/migrate
    cmds:
      - echo should implement in Taskfile_{{GOOS}}.yml

  ## gore CLI
  cli:
    desc: Auto-importing (gore -autoimport), quit using Ctrl+D or :quit or :q
    cmds:
      - gore -autoimport
  install-gore:
    desc: install https://github.com/motemen/gore
    cmds:
      - |
        # The gore command requires Go tool-chains on runtime, so standalone binary is not distributed.
        GO111MODULE=off go get -u github.com/motemen/gore/cmd/gore
        # Make sure $GOPATH/bin is in your $PATH.
        GO111MODULE=off go get -u github.com/mdempsky/gocode   # for code completion
        GO111MODULE=off go get -u github.com/k0kubun/pp        # or github.com/davecgh/go-spew/spew