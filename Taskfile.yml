# https://taskfile.dev
version: '2'

env:
 GOMODNAME: "github.com/cao7113/golang"
vars:
  GREETING: Hello, Golang!

tasks:
  hello:
    cmds:
      - echo "{{.GREETING}}"
    silent: true

  test:
    desc: go test
    cmds:
      # todo
  
  lint:
    desc: lint code
    cmds:
      - |
        PKG_LIST=$(go list $GOMODNAME/... | grep -v /vendor/)
        golint -set_exit_status ${PKG_LIST}

  ## Golangci-lint
  cilint:
    desc: run golangci-lint
    cmds:
      - golangci-lint run ./...
  cilint-try:
    desc: run golangci-lint in trytest
    cmds:
      - golangci-lint run trytest
  cilinters:
    desc: golangci-lint
    cmds:
      # https://raw.githubusercontent.com/golangci/golangci-lint/v1.20.1/.golangci.example.yml
      - golangci-lint linters -v

  run:
    cmds:
      - go run main.go

  mod:
    cmds:
      # - go mod init $GOMODNAME
      - go mod tidy -v
    
  ## docker
  dkcom-up:
    cmds:
      - docker-compose up

  install:
    cmds:
      - brew install golang

  install-bloomrpc:
    desc: install rpc GUI client
    cmds:
      - brew cask install bloomrpc

  install-direnv:
    desc: install .envrc manager
    cmds:
      - brew install direnv
      - echo hook your shell as https://direnv.net/docs/hook.html

  ## gore CLI
  cli:
    desc: Auto-importing (gore -autoimport), quit using Ctrl+D or :quit or :q
    cmds:
      - gore -autoimport
  install-gore:
    desc: install https://github.com/motemen/gore
    cmds:
      - |
        # The gore command requires Go tool-chains on runtime, so standalone binary is not distributed.
        GO111MODULE=off go get -u github.com/motemen/gore/cmd/gore
        # Make sure $GOPATH/bin is in your $PATH.
        GO111MODULE=off go get -u github.com/mdempsky/gocode   # for code completion
        GO111MODULE=off go get -u github.com/k0kubun/pp        # or github.com/davecgh/go-spew/spew